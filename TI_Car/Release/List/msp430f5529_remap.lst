###############################################################################
#
# IAR C/C++ Compiler V7.10.1.973/W32 for MSP430           03/Aug/2021  16:28:10
# Copyright 1996-2017 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  large
#    __code_model  =  large
#    Source file   =  D:\Dev\Project\TI_Car\Drivers\src\msp430f5529_remap.c
#    Command line  =  
#        -f C:\Users\Jeans\AppData\Local\Temp\EW28D3.tmp
#        (D:\Dev\Project\TI_Car\Drivers\src\msp430f5529_remap.c -D NDEBUG -D
#        RAM_VECTOR -lC D:\Dev\Project\TI_Car\Release\List -lA
#        D:\Dev\Project\TI_Car\Release\List -o
#        D:\Dev\Project\TI_Car\Release\Obj --debug -D__MSP430F5529__ -e
#        --double=32 --dlib_config D:\Dev\IAR\430\lib\dlib\dl430xllfn.h -I
#        D:\Dev\Project\TI_Car\ -I D:\Dev\Project\TI_Car\Drivers\inc\ -I
#        D:\Dev\Project\TI_Car\Drivers\src\ -I D:\Dev\Project\TI_Car\HardWare\
#        -I D:\Dev\Project\TI_Car\HardWare\led\ -I
#        D:\Dev\Project\TI_Car\HardWare\key\ -I
#        D:\Dev\Project\TI_Car\HardWare\lcd\ -I
#        D:\Dev\Project\TI_Car\HardWare\lcd_api\ -I
#        D:\Dev\Project\TI_Car\HardWare\nrf24l01\ -I
#        D:\Dev\Project\TI_Car\HardWare\oled\ -I
#        D:\Dev\Project\TI_Car\HardWare\delay\ -I
#        D:\Dev\Project\TI_Car\HardWare\2.2TFT\ -I
#        D:\Dev\Project\TI_Car\System\ -I D:\Dev\Project\TI_Car\System\inc\ -I
#        D:\Dev\Project\TI_Car\System\src\ -I D:\Dev\Project\TI_Car\User\ -I
#        D:\Dev\Project\TI_Car\User\USER\ -I
#        D:\Dev\Project\TI_Car\HardWare\motor\ -I D:\Dev\Project\TI_Car\User\
#        -I D:\Dev\Project\TI_Car\HardWare\encoder\ --core=430X
#        --data_model=large -Oh --multiplier=32 --hw_workaround=CPU40
#        --hw_workaround=nop_after_lpm -DNDEBUG --code_model=large)
#    Locale        =  Chinese (Simplified)_CHN.936
#    List file     =  D:\Dev\Project\TI_Car\Release\List\msp430f5529_remap.lst
#    Object file   =  D:\Dev\Project\TI_Car\Release\Obj\msp430f5529_remap.r43
#
###############################################################################

D:\Dev\Project\TI_Car\Drivers\src\msp430f5529_remap.c
      1          #include "msp430f5529_remap.h"

   \                                 In  segment DATA16_AN, at 0x1c0
   \   union <unnamed> __data16 _A_PMAPKEYID_L
   \                     _A_PMAPKEYID_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x1c2
   \   union <unnamed> __data16 _A_PMAPCTL_L
   \                     _A_PMAPCTL_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x1e0
   \   union <unnamed> __data16 _A_P4MAP01_L
   \                     _A_P4MAP01_L:
   \   000000                DS8 2
      2          
      3          /*******************************************************************************
      4          *  函数名称：GPIO_PinRemapConfig(PORTn portn,uint8_t pin,GPIO_Remap remap)
      5          *  功能说明：GPIO重映射，可以使任一GPIO口（目前只有P4端口（P4.0-P4.7）支持）
      6                       实现可供选择的任一复用功能（参见.h文件的枚举选项）
      7          *  注意    ：某些功能还是需要设置硬件输入输出方向及第二功能
      8          *  参数说明：PORTn portn        :GPIO重映射端口
      9                       uint8_t pin          :GPIO重映射引脚
     10                       GPIO_Remap remap   :GOIO重映射功能
     11          *  函数返回：无
     12          *  使用示例：GPIO_PinRemapConfig(P4,7,GPIO_Remap_MCLK)； //P4.7重映射为MCLK主时钟输出
     13          ********************************************************************************/

   \                                 In  segment CODE, align 2
     14          void  GPIO_PinRemapConfig(PORTn portn,uint8_t pin,GPIO_Remap remap)
   \                     GPIO_PinRemapConfig:
     15          {
     16          #ifdef  GPIO_PORT_SIZE_WORD
     17            ASSERT(((portn == (PORTB)) && (pin>=8))||((portn == (PORT4)) && (pin<=7)),
     18                   "GPIO_PinRemapConfig",
     19                   "portn,pin参数不合理！");              //断言检测输入参数
     20            if(portn == PORTB)pin = pin - 8;
     21          #else
     22            ASSERT(portn == PORT4,"GPIO_PinRemapConfig","portn参数不合理！");                             //断言检测输入参数
     23          #endif 
     24            PMAPPWD = PMAPKEY;                                            //访问钥匙
   \   000000   B240522DC001 MOV.W   #0x2d52, &0x1c0
     25            *(&P4MAP0 + pin) = remap;                                     //端口重映射配置 
   \   000006   4D4D         MOV.B   R13, R13
   \   000008   CD4EE001     MOV.B   R14, 0x1e0(R13)
     26            PMAPCTL |= PMAPRECFG;                                         //允许重新配置的端口映射
   \   00000C   A2D3C201     BIS.W   #0x2, &0x1c2
     27            
     28            if(((remap>=GPIO_Remap_TB0CCR0A) && (remap<=GPIO_Remap_TB0CCR6A)) 
     29                || (remap==GPIO_Remap_MCLK))      //如果是这些复用功能则需要设为输出方向，也可能不是，其他的也不一定不需要设为输出方向
   \   000010   4F4E         MOV.B   R14, R15
   \   000012   6F82         SUB.B   #0x4, R15
   \   000014   7F900700     CMP.B   #0x7, R15
   \   000018   0328         JNC     ??GPIO_PinRemapConfig_1
   \   00001A   7E901200     CMP.B   #0x12, R14
   \   00001E   0320         JNE     ??GPIO_PinRemapConfig_2
     30            {
     31              GPIO_Init(PORT4,pin,GPO | SEL);
   \                     ??GPIO_PinRemapConfig_1:
   \   000020   3E400201     MOV.W   #0x102, R14
   \   000024   023C         JMP     ??GPIO_PinRemapConfig_0
     32            }
     33            else
     34            {
     35              GPIO_Init(PORT4,pin,SEL);
   \                     ??GPIO_PinRemapConfig_2:
   \   000026   3E400001     MOV.W   #0x100, R14
   \                     ??GPIO_PinRemapConfig_0:
   \   00002A   1F43         MOV.W   #0x1, R15
   \   00002C   5D83         SUB.B   #0x1, R13
   \   00002E   0230         JN      ??GPIO_PinRemapConfig_3
   \   000030                RPT     R13
   \   000030   CD180F5F     RLAX.W  R15
   \                     ??GPIO_PinRemapConfig_3:
   \   000034   0D4F         MOV.W   R15, R13
   \   000036   7C400300     MOV.B   #0x3, R12
   \   00003A   ........     CALLA   #GPIO_MultiBits_Init
     36            }
     37            PMAPPWD = 0;                                                 //禁止访问
   \   00003E   8243C001     MOV.W   #0x0, &0x1c0
     38          }
   \   000042   1001         RETA
   \   000044                REQUIRE _A_PMAPKEYID_L
   \   000044                REQUIRE _A_P4MAP01_L
   \   000044                REQUIRE _A_PMAPCTL_L
     39          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   GPIO_PinRemapConfig
        4   -> GPIO_MultiBits_Init


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      68  GPIO_PinRemapConfig
       2  _A_P4MAP01_L
       2  _A_PMAPCTL_L
       2  _A_PMAPKEYID_L

 
 68 bytes in segment CODE
  6 bytes in segment DATA16_AN
 
 68 bytes of CODE memory
  0 bytes of DATA memory (+ 6 bytes shared)

Errors: none
Warnings: none
