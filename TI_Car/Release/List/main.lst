###############################################################################
#
# IAR C/C++ Compiler V7.10.1.973/W32 for MSP430           03/Aug/2021  16:28:05
# Copyright 1996-2017 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  large
#    __code_model  =  large
#    Source file   =  D:\Dev\Project\TI_Car\User\main.c
#    Command line  =  
#        -f C:\Users\Jeans\AppData\Local\Temp\EW1668.tmp
#        (D:\Dev\Project\TI_Car\User\main.c -D NDEBUG -D RAM_VECTOR -lC
#        D:\Dev\Project\TI_Car\Release\List -lA
#        D:\Dev\Project\TI_Car\Release\List -o
#        D:\Dev\Project\TI_Car\Release\Obj --debug -D__MSP430F5529__ -e
#        --double=32 --dlib_config D:\Dev\IAR\430\lib\dlib\dl430xllfn.h -I
#        D:\Dev\Project\TI_Car\ -I D:\Dev\Project\TI_Car\Drivers\inc\ -I
#        D:\Dev\Project\TI_Car\Drivers\src\ -I D:\Dev\Project\TI_Car\HardWare\
#        -I D:\Dev\Project\TI_Car\HardWare\led\ -I
#        D:\Dev\Project\TI_Car\HardWare\key\ -I
#        D:\Dev\Project\TI_Car\HardWare\lcd\ -I
#        D:\Dev\Project\TI_Car\HardWare\lcd_api\ -I
#        D:\Dev\Project\TI_Car\HardWare\nrf24l01\ -I
#        D:\Dev\Project\TI_Car\HardWare\oled\ -I
#        D:\Dev\Project\TI_Car\HardWare\delay\ -I
#        D:\Dev\Project\TI_Car\HardWare\2.2TFT\ -I
#        D:\Dev\Project\TI_Car\System\ -I D:\Dev\Project\TI_Car\System\inc\ -I
#        D:\Dev\Project\TI_Car\System\src\ -I D:\Dev\Project\TI_Car\User\ -I
#        D:\Dev\Project\TI_Car\User\USER\ -I
#        D:\Dev\Project\TI_Car\HardWare\motor\ -I D:\Dev\Project\TI_Car\User\
#        -I D:\Dev\Project\TI_Car\HardWare\encoder\ --core=430X
#        --data_model=large -Oh --multiplier=32 --hw_workaround=CPU40
#        --hw_workaround=nop_after_lpm -DNDEBUG --code_model=large)
#    Locale        =  Chinese (Simplified)_CHN.936
#    List file     =  D:\Dev\Project\TI_Car\Release\List\main.lst
#    Object file   =  D:\Dev\Project\TI_Car\Release\Obj\main.r43
#
###############################################################################

D:\Dev\Project\TI_Car\User\main.c
      1          ///*!
      2          // *     COPYRIGHT NOTICE
      3          // *     Copyright (c) 2016,CTGU-GB
      4          // *     All rights reserved.
      5          // *
      6          // *
      7          // * @file       main.c
      8          //* @brief      MSP430F5529 平台主程序
      9          //
     10          // * @author     CTGU-GB
     11          // * @version    v2.7
     12          // * @date       2016-11-26
     13          // */
     14          //#include "include.h"
     15          //
     16          //uint16_t data=1000;
     17          //float fdata=1.0; 
     18          //__interrupt void TIMER1_A0_IRQ_Handler()
     19          //{
     20          //   //GPIO_TurnBit  (PB, 15);//PIN_OUT(P4,7) = !PIN_OUT(P4,7);
     21          //   GPIO_TurnBit  (P4, 7);
     22          //   data++;  
     23          //   fdata+=0.1;
     24          //}
     25          //void main()
     26          //{
     27          //  DisableInterrupts();            //禁止总中断
     28          //  SMCLK_OUT();
     29          //  LED_Init(LED_ALL);              //LED灯初始化
     30          //  OLED_Init();                       //OLED初始化
     31          //  //LCD_INIT();
     32          //  
     33          //  Set_Vector_Handler(VECTOR_TIMER_A1_CCR0, TIMER1_A0_IRQ_Handler);   //设置定时器TA1的中断服务程序为：TIMER1_A0_IRQ_Handler
     34          //  TIMER_Interval_Ms(TIMER_A1, 500);    //设置TA1为定时中断，中断时间为500Ms
     35          //  TIMER_ITConfig (TIMER_A1, TIMER_CCR0_IRQn, ENABLE);            //使能TIMER的某一个中断
     36          //  
     37          //  //OLED显示字符，字符串，整数，小数，一个函数就够了
     38          //  OLED_PrintfAt(FONT_ASCII_6X8,0,0,"A");//显示一个字符
     39          //  OLED_PrintfAt(FONT_ASCII_6X8,0,6,"BCDE!");//显示一个字符串
     40          //  OLED_PrintfAt(FONT_ASCII_6X8,1,0,"%d",-100);//显示一个整数
     41          //  OLED_PrintfAt(FONT_ASCII_6X8,2,0,"%.5f",-100.008310);//显示一个浮点数
     42          //  
     43          //  EnableInterrupts();
     44          //  while(1)
     45          //  {  
     46          //    //OLED_PrintfAt(FONT_ASCII_6X8,3,0,"data=%d\nfdata=%f",data,fdata);//显示更新 
     47          //     DELAY_MS(500);
     48          //     GPIO_TurnBit  (P1, 0);
     49          //     //GPIO_TurnBit  (PA, 0);
     50          //     //PIN_OUT(P1,0) = !PIN_OUT(P1,0);
     51          //  }
     52          //}
     53          
     54          
     55          #include "include.h"
     56          
     57          
     58          
     59          
     60          
     61          

   \                                 In  segment CODE, align 2
     62          void main()
   \                     main:
     63          {
     64             app_main_init();
   \   000000   ........     CALLA   #app_main_init
     65          
     66            
     67            while(1)
     68            {
     69              app_main();
   \                     ??main_0:
   \   000004   ........     CALLA   #app_main
     70              DELAY_MS(100);
   \   000008                ////////////// Start of 2500000 cycles delay.
   \   000008   3F406689     MOV.W   #0x8966, R15
   \   00000C   3E400900     MOV.W   #0x9, R14
   \                     ??main_1:
   \   000010   3F53         ADD.W   #0xffff, R15
   \   000012   3E63         ADDC.W  #0xffff, R14
   \   000014   FD2F         JC      ??main_1
   \   000016                ////////////// End of delay code.
   \   000016   F63F         JMP     ??main_0
   \   000018   0343         NOP
     71            }
     72          }
     73          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   main
        4   -> app_main
        4   -> app_main_init


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      26  main

 
 26 bytes in segment CODE
 
 26 bytes of CODE memory

Errors: none
Warnings: none
