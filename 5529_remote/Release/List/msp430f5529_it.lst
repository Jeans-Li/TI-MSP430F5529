###############################################################################
#
# IAR C/C++ Compiler V7.10.1.973/W32 for MSP430           31/Jul/2021  19:48:27
# Copyright 1996-2017 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  large
#    __code_model  =  large
#    Source file   =  D:\Dev\IAR\5529_remote\System\src\msp430f5529_it.c
#    Command line  =  
#        -f C:\Users\Jeans\AppData\Local\Temp\EW7800.tmp
#        (D:\Dev\IAR\5529_remote\System\src\msp430f5529_it.c -D NDEBUG -D
#        RAM_VECTOR -lC D:\Dev\IAR\5529_remote\Release\List -lA
#        D:\Dev\IAR\5529_remote\Release\List -o
#        D:\Dev\IAR\5529_remote\Release\Obj --debug -D__MSP430F5529__ -e
#        --double=32 --dlib_config D:\Dev\IAR\430\lib\dlib\dl430xllfn.h -I
#        D:\Dev\IAR\5529_remote\ -I D:\Dev\IAR\5529_remote\Drivers\inc\ -I
#        D:\Dev\IAR\5529_remote\Drivers\src\ -I
#        D:\Dev\IAR\5529_remote\HardWare\ -I
#        D:\Dev\IAR\5529_remote\HardWare\led\ -I
#        D:\Dev\IAR\5529_remote\HardWare\key\ -I
#        D:\Dev\IAR\5529_remote\HardWare\lcd\ -I
#        D:\Dev\IAR\5529_remote\HardWare\lcd_api\ -I
#        D:\Dev\IAR\5529_remote\HardWare\nrf24l01\ -I
#        D:\Dev\IAR\5529_remote\HardWare\oled\ -I
#        D:\Dev\IAR\5529_remote\HardWare\delay\ -I
#        D:\Dev\IAR\5529_remote\HardWare\2.2TFT\ -I
#        D:\Dev\IAR\5529_remote\System\ -I D:\Dev\IAR\5529_remote\System\inc\
#        -I D:\Dev\IAR\5529_remote\System\src\ -I D:\Dev\IAR\5529_remote\User\
#        -I D:\Dev\IAR\5529_remote\User\USER\ --core=430X --data_model=large
#        -Oh --multiplier=32 --hw_workaround=CPU40
#        --hw_workaround=nop_after_lpm -DNDEBUG --code_model=large)
#    Locale        =  Chinese (Simplified)_CHN.936
#    List file     =  D:\Dev\IAR\5529_remote\Release\List\msp430f5529_it.lst
#    Object file   =  D:\Dev\IAR\5529_remote\Release\Obj\msp430f5529_it.r43
#
###############################################################################

D:\Dev\IAR\5529_remote\System\src\msp430f5529_it.c
      1          #include "msp430f5529_it.h"
      2          #include "led.h"
      3          #include "include.h"
      4          /*******************************************************************************
      5          *  函数名称：default_isr(void)
      6          *  功能说明：默认的中断函数，如果某一个中断开启，且设置了中断向量表映射到RAM
      7                       但没调用Set_Vector_Handler(VECTORn vector,__interrupt void pfunc_handler(void))配置中断服务函数，
      8                       发生中断时会进入这个默认中断服务函数，在这个中断服务函数里用指示灯指示中断进入错误
      9                       并用串口打印错误信息
     10          *  参数说明：无
     11          *  函数返回：无
     12          *  使用示例：无
     13          ********************************************************************************/

   \                                 In  segment ISR_CODE, align 2
     14          __interrupt void default_isr(void)
   \                     default_isr:
     15          {
     16          #ifdef DEBUG
     17          #ifdef DEBUG_UART_PRINT
     18              //启动函数中已经初始化过串口，主函数中若修改了SMCLK频率则需再设置波特率，以便从新设置波特率
     19              UART_SetBaudRate (PRINT_UART,PRINT_BAUD);                    
     20          #endif
     21              LED_Init(LED_ALL);                        //LED灯初始化
     22              //while (1)  //这里取消死循环
     23              {
     24                 DEBUG_PRINTF("\n有未知中断进入，请检查是否有中断使能却未配置中断服务函数！\n");  //打印错误信息
     25                 LED_Water_Lights();                                         //用流水灯来指示进入错误状态
     26              }
     27          #endif
     28          }
   \   000000   0013         RETI

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   default_isr


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  default_isr

 
 2 bytes in segment ISR_CODE
 
 2 bytes of CODE memory

Errors: none
Warnings: none
